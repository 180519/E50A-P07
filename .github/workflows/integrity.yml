name: Pruebas unitarias y funcionales

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4      

      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432; do sleep 1; done

      - name: Cargar esquema de la base de datos
        run: |
          psql -h localhost -U postgres -d testdb -f scripts.sql
        env:
          PGPASSWORD: postgres

      - name: Run tests
        run: |
          set -o pipefail
          psql -h localhost -U postgres -d testdb -f tests.sql 2>&1 | tee test_output.txt
          ERROR_LINES=$(grep -E "ERROR:" test_output.txt)
          echo "ERROR_LINES<<EOF" >> $GITHUB_ENV
          echo "$ERROR_LINES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo $ERROR_LINES
        env:
          PGPASSWORD: postgres

      - name: Notify status
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKE }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          ERROR_LINES: ${{ env.ERROR_LINES }}
        run: |
          STATUS="failure"
          COMMENT=$(printf "El estado de las pruebas es: %s\nBranch: %s\nUsuario: %s\nCommit: %s\n\nMensajes de las pruebas:\n%s" "$STATUS" "$GITHUB_REF" "$GITHUB_ACTOR" "$GITHUB_SHA" "$ERROR_LINES")

          curl -X POST -H "Authorization: token $GH_TOKEN" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/1/comments \
          -d "{\"body\": \"$COMMENT\"}"

      - name: Notify success
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          ERROR_LINES: ${{ env.ERROR_LINES }}          
        run: |
          STATUS="success"
          COMMENT=$(printf "El estado de las pruebas es: %s\nBranch: %s\nUsuario: %s\nCommit: %s\n\nMensajes de las pruebas:\n%s" "$STATUS" "$GITHUB_REF" "$GITHUB_ACTOR" "$GITHUB_SHA" "$ERROR_LINES")

          curl -X POST -H "Authorization: token $GH_TOKEN" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/1/comments \
          -d "{\"body\": \"$COMMENT\"}"